intreg -> (-1, -1)
nr - 0 -> (14, 0)
, -> (-1, -1)
o - 0 -> (6, 0)
, -> (-1, -1)
clonaNr - 0 -> (12, 0)
; -> (-1, -1)
citeste -> (-1, -1)
nr - 0 -> (14, 0)
; -> (-1, -1)
clonaNr - 0 -> (12, 0)
= -> (-1, -1)
nr - 0 -> (14, 0)
; -> (-1, -1)
o - 0 -> (6, 0)
= -> (-1, -1)
0 - 1 -> (3, 0)
; -> (-1, -1)
cat_timp -> (-1, -1)
( -> (-1, -1)
nr - 0 -> (14, 0)
>= -> (-1, -1)
0 - 1 -> (3, 0)
) -> (-1, -1)
{ -> (-1, -1)
o - 0 -> (6, 0)
= -> (-1, -1)
o - 0 -> (6, 0)
* -> (-1, -1)
10 - 1 -> (7, 0)
+ -> (-1, -1)
nr - 0 -> (14, 0)
% -> (-1, -1)
10 - 1 -> (7, 0)
; -> (-1, -1)
nr - 0 -> (14, 0)
= -> (-1, -1)
nr - 0 -> (14, 0)
/ -> (-1, -1)
10 - 1 -> (7, 0)
; -> (-1, -1)
} -> (-1, -1)
daca -> (-1, -1)
( -> (-1, -1)
clonaNr - 0 -> (12, 0)
== -> (-1, -1)
o - 0 -> (6, 0)
) -> (-1, -1)
{ -> (-1, -1)
afiseaza -> (-1, -1)
"DA" - 1 -> (6, 1)
; -> (-1, -1)
} -> (-1, -1)
altfel -> (-1, -1)
{ -> (-1, -1)
afiseaza -> (-1, -1)
"NU" - 1 -> (6, 2)
; -> (-1, -1)
} -> (-1, -1)
